apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'walle'
apply plugin: 'AndResGuard'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "me.shouheng.references"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        // enable multi dex
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
        ndk {
            // 只保留 armeabi 和 armeabi-v7a 架构的 so 库，推送中有 so 库，容易导致 UnsatisfiedLinkError
            abiFilters 'armeabi', 'armeabi-v7a'
        }
    }
    signingConfigs {
        release {
            keyAlias 'key0'
            storeFile file('../palm.jks')
            storePassword '123456'
            keyPassword '123456'
        }
        debug { }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false // minify
            shrinkResources false // enable shrink resources
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        // config released apk name
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = defaultConfig.applicationId + "-" + variant.baseName + "-" + defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk"
            }
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    // config release types
    flavorDimensions "default"
    productFlavors {
        alpha {
            dimension "default"
        }
        beta {
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }
    // use data binding
    dataBinding {
        enabled = true
    }
    // use java 8 language
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // use external libs folder
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    dexOptions {
        jumboMode = true
    }
    // walle
    walle {
        apkOutputFolder = new File("${project.buildDir}/outputs/channels")
        apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
        channelFile = new File("${project.getProjectDir()}/channel")
    }
    // andResGuard
    andResGuard {
        mappingFile = null
        use7zip = true
        useSign = true
        keepRoot = false

        whiteList = [
                // for fabric
                "R.string.com.crashlytics.*",
                // for google-services
                "R.string.google_app_id",
                "R.string.gcm_defaultSenderId",
                "R.string.default_web_client_id",
                "R.string.ga_trackingId",
                "R.string.firebase_database_url",
                "R.string.google_api_key",
                "R.string.google_crash_reporting_api_key"
        ]
        compressFilePattern = [
                "*.png",
                "*.jpg",
                "*.jpeg",
                "*.gif",
        ]
        sevenzip {
            artifact = 'com.tencent.mm:SevenZip:1.2.13'
        }
    }
    // dex count
    dexcount {
        format = "list"
        includeClasses = false
        includeClassCount = false
        includeFieldCount = true
        includeTotalMethodCount = false
        orderByMethodCount = false
        verbose = false
        maxTreeDepth = Integer.MAX_VALUE
        teamCityIntegration = false
        teamCitySlug = null
        runOnEachPackage = true
//        maxMethodCount = 64000
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // app intro
    implementation 'com.github.paolorotolo:appintro:1.3.0'
    // material drawer
    implementation "com.mikepenz:materialdrawer:6.1.1"
    // awesome fonts and icons
    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.0.13.0@aar'
    // router
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    // projects
    if (!isGuokrModuleApp.toBoolean()) {
        implementation project(':guokr')
    }
    if (!isLiveModuleApp.toBoolean()) {
        implementation project(':live')
    }
    if (!isLayoutModuleApp.toBoolean()) {
        implementation project(':layout')
    }
    if (!isLibraryModuleApp.toBoolean()) {
        implementation project(':libraries')
    }
    if (!isEyepetizerModuleApp.toBoolean()) {
        implementation project(':eyepetizer')
    }
    if (!isAdvancedModuleApp.toBoolean()) {
        implementation project(':advanced')
    }
    if (!isAnimationsModuleApp.toBoolean()) {
        implementation project(':animations')
    }
    implementation project(':commons')
}
